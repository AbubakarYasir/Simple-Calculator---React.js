import React, {useState} from 'react';
import ReactDOM from 'react-dom';
import PropTypes from 'prop-types';
import 'bootstrap/dist/css/bootstrap.css';

/**
 * Main App component that renders the calculator interface
 */
function App() {
	// Use state to keep track of the final calculated value
	const [finalValue, setFinalValue] = useState('');

	return (
		<div className='container mt-5'>
			<div className='card'>
				<div className='card-header'>
					<h1>Calculate!</h1>
				</div>
				<div className='card-body'>
					<p className='card-text'>You can do calculation here.</p>
					{/* Render the form component and pass in setFinalValue as a prop */}
					<MyForm setFinalValue={setFinalValue} />
					{/* Display the final calculated value */}
					<p className='card-text'>{finalValue}</p>
				</div>
			</div>
		</div>
	);
}

/**
 * Form component that allows users to input two numbers and perform calculations on them
 * @param {Object} props - props passed from the App component
 * @param {Function} props.setFinalValue - function to set the final calculated value
 */
function MyForm({setFinalValue}) {
	// Use state to keep track of the input values
	const [inputs, setInputs] = useState({
		firstNumber: '',
		secondNumber: '',
	});
	MyForm.propTypes = {
		setFinalValue: PropTypes.func.isRequired,
	};
	/**
     * Handler function that updates the input values when the user types in the input fields
     * @param {Object} event - event object generated by the onChange event
     */
	const handleChange = event => {
		const {name} = event.target;
		const {value} = event.target;
		setInputs(values => ({...values, [name]: value}));
	};

	/**
     * Handler function that performs the calculation and updates the final value state
     * @param {Object} event - event object generated by the onClick event
     * @param {string} operator - the operator (+, -, *, /) to use for the calculation
     */
	const handleOperation = (event, operator) => {
		event.preventDefault();
		const {firstNumber, secondNumber} = inputs;
		if (firstNumber === '' || secondNumber === '') {
			setFinalValue('Please enter a value for both numbers');
		} else {
			let totalValue;
			switch (operator) {
				case '+':
					totalValue = Number(firstNumber) + Number(secondNumber);
					break;
				case '-':
					totalValue = Number(firstNumber) - Number(secondNumber);
					break;
				case '*':
					totalValue = Number(firstNumber) * Number(secondNumber);
					break;
				case '/':
					totalValue = Number(firstNumber) / Number(secondNumber);
					break;
				default:
					break;
			}

			// Update the final value state with the calculated total
			setFinalValue(`The total is: ${totalValue}`);
		}
	};

	return (
		<form>
			{/* Input for the first number */}
			<div className='form-group'>
				<label htmlFor='firstNumber'>First Number:</label>
				<input
					type='number'
					className='form-control'
					id='firstNumber'
					name='firstNumber'
					value={inputs.firstNumber}
					onChange={handleChange}
				/>
			</div>
			{/* Input for the second number */}
			<div className='form-group '>
				<label htmlFor='secondNumber'>Second Number:</label>
				<input
					type='number'
					className='form-control'
					id='secondNumber'
					name='secondNumber'
					value={inputs.secondNumber}
					onChange={handleChange}
				/>
			</div>
			{/* Buttons for mathematical operations */}
			<div className='container mt-4'>
				<div className='row'>
					<button
						className='btn btn-primary col-sm me-4'
						onClick={event => handleOperation(event, '+')}
					>
                        Addition
					</button>
					<button
						className='btn btn-primary col-sm me-4'
						onClick={event => handleOperation(event, '-')}
					>
                        Subtraction
					</button>
					<button
						className='btn btn-primary col-sm me-4'
						onClick={event => handleOperation(event, '*')}
					>
                        Multiplication
					</button>
					<button
						className='btn btn-primary col-sm'
						onClick={event => handleOperation(event, '/')}
					>
                        Division
					</button>
				</div>
			</div>
		</form>
	);
}

// Render the main App component
ReactDOM.render(<App />, document.getElementById('root'));
